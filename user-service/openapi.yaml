openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080/
    description: Generated server url
tags:
  - name: Account Service
    description: Работа с аккаунтом
paths:
  /api/v1/account/recovery:
    put:
      tags:
        - Account Service
      summary: Восстановление аккаунта
      operationId: recoveryUserAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRecoveryRq'
        required: true
      responses:
        '200':
          description: Successfully
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Account Not Found
  /api/v1/account/me:
    get:
      tags:
        - Account Service
      summary: Получение аккаунта
      operationId: getUserAccount
      responses:
        '200':
          description: Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDto'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
    put:
      tags:
        - Account Service
      summary: Редактирование аккаунта
      operationId: updateUserAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDto'
        required: true
      responses:
        '200':
          description: Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDto'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Account Not Found
    delete:
      tags:
        - Account Service
      summary: Удаление аккаунта
      operationId: deleteUserAccount
      responses:
        '200':
          description: Successfully
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Account Not Found
  /api/v1/account/block/{id}:
    put:
      tags:
        - Account Service
      summary: Блокировка аккаунта по id
      operationId: blockAccountById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successfully
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Account Not Found
    delete:
      tags:
        - Account Service
      summary: Разблокировка аккаунта по id
      operationId: unblockAccountById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successfully
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Account Not Found
  /api/v1/storage:
    post:
      tags:
        - storage-resource-impl
      summary: Загрузка фотографии
      operationId: uploadFile
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDto'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Account Not Found
  /api/v1/account:
    get:
      tags:
        - Account Service
      summary: Получение всех аккаунтов
      operationId: getAllAccounts
      parameters:
        - name: page
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: Successfully
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
    post:
      tags:
        - Account Service
      summary: Создание аккаунта
      operationId: createAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDto'
        required: true
      responses:
        '200':
          description: Successfully
        '400':
          description: Bad Request
  /api/v1/account/searchByFilter:
    post:
      tags:
        - Account Service
      summary: Поиск аккаунта по фильтру
      operationId: searchAccountByFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountByFilterDto'
        required: true
      responses:
        '200':
          description: Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDto'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  /api/v1/account/{id}:
    get:
      tags:
        - Account Service
      summary: Получение аккаунта по id
      operationId: getAccountById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDto'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Account Not Found
  /api/v1/account/search:
    get:
      tags:
        - Account Service
      summary: Поиск аккаунта
      operationId: searchAccount
      parameters:
        - name: dto
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/AccountSearchDto'
        - name: page
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDto'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  /api/v1/account/ids:
    get:
      tags:
        - Account Service
      summary: Получение всех id аккаунта
      operationId: getAllIds
      responses:
        '200':
          description: Successfully
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  /api/v1/account/accountIds:
    get:
      tags:
        - Account Service
      summary: Получение аккаунтов по их id
      operationId: getAccountIds
      parameters:
        - name: ids
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: page
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDto'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
components:
  schemas:
    AccountRecoveryRq:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    AccountDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        phone:
          type: string
        photo:
          type: string
        about:
          type: string
        city:
          type: string
        country:
          type: string
        token:
          type: string
        statusCode:
          type: string
          enum:
            - FRIEND
            - REQUEST_TO
            - REQUEST_FROM
            - BLOCKED
            - DECLINED
            - SUBSCRIBED
            - NONE
            - WATCHING
            - REJECTING
        firstName:
          type: string
        lastName:
          type: string
        regDate:
          type: string
          format: date-time
        birthDate:
          type: string
          format: date-time
        messagePermission:
          type: string
        lastOnlineTime:
          type: string
          format: date-time
        isOnline:
          type: boolean
        isBlocked:
          type: boolean
        isDeleted:
          type: boolean
        photoId:
          type: string
        photoName:
          type: string
        role:
          type: string
          enum:
            - USER
            - MODERATOR
            - ADMIN
        createdOn:
          type: string
          format: date-time
        updatedOn:
          type: string
          format: date-time
        password:
          type: string
    AccountByFilterDto:
      type: object
      properties:
        accountSearchDto:
          $ref: '#/components/schemas/AccountSearchDto'
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
    AccountSearchDto:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
            format: int64
        author:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        birthDateFrom:
          type: string
          format: date-time
        birthDateTo:
          type: string
          format: date-time
        city:
          type: string
        country:
          type: string
        isBlocked:
          type: boolean
        isDeleted:
          type: boolean
        ageTo:
          type: integer
          format: int32
        ageFrom:
          type: integer
          format: int32
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
