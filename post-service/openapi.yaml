openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8082
    description: Generated server url
paths:
  /api/v1/post/{id}:
    get:
      tags:
        - post-resource-impl
      operationId: getById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PostDto'
    put:
      tags:
        - post-resource-impl
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDto'
        required: true
      responses:
        '201':
          description: Created
    delete:
      tags:
        - post-resource-impl
      operationId: deleteById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/v1/post/{id}/comment/{commentId}:
    put:
      tags:
        - comment-resource-impl
      operationId: update_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentDto'
        required: true
      responses:
        '201':
          description: Created
    delete:
      tags:
        - comment-resource-impl
      operationId: deleteById_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/v1/post:
    get:
      tags:
        - post-resource-impl
      operationId: getAll
      parameters:
        - name: searchDto
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/PostSearchDto'
        - name: page
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagePostDto'
    post:
      tags:
        - post-resource-impl
      operationId: create
      parameters:
        - name: publishDate
          in: query
          required: false
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDto'
        required: true
      responses:
        '201':
          description: Created
  /api/v1/post/{id}/like:
    post:
      tags:
        - like-resource-impl
      operationId: create_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: Created
    delete:
      tags:
        - like-resource-impl
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: Created
  /api/v1/post/{id}/comment:
    get:
      tags:
        - comment-resource-impl
      operationId: getByPostId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageCommentDto'
    post:
      tags:
        - comment-resource-impl
      operationId: create_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentDto'
        required: true
      responses:
        '201':
          description: Created
  /api/v1/post/{id}/comment/{commentId}/like:
    post:
      tags:
        - like-resource-impl
      operationId: createToComment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: Created
    delete:
      tags:
        - like-resource-impl
      operationId: deleteToComment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: Created
  /api/v1/post/storagePostPhoto:
    post:
      tags:
        - post-resource-impl
      operationId: uploadFile
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PhotoDto'
  /api/v1/post/{id}/comment/{commentId}/subcomment:
    get:
      tags:
        - comment-resource-impl
      operationId: getByPostIdAndCommentId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageCommentDto'
components:
  schemas:
    PostDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        time:
          type: string
          format: date-time
        timeChanged:
          type: string
          format: date-time
        authorId:
          type: integer
          format: int64
        title:
          type: string
        type:
          type: string
          enum:
            - POSTED
            - QUEUED
        postText:
          type: string
        isBlocked:
          type: boolean
        isDelete:
          type: boolean
        commentsCount:
          type: integer
          format: int32
        tags:
          type: array
          items:
            type: string
        likeAmount:
          type: integer
          format: int32
        myLike:
          type: boolean
        imagePath:
          type: string
        publishDate:
          type: string
          format: date-time
    CommentDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        commentType:
          type: string
          enum:
            - POST
            - COMMENT
        time:
          type: string
          format: date-time
        timeChanged:
          type: string
          format: date-time
        authorId:
          type: integer
          format: int64
        parentId:
          type: integer
          format: int64
        commentText:
          type: string
        postId:
          type: integer
          format: int64
        isBlocked:
          type: boolean
        isDelete:
          type: boolean
        likeAmount:
          type: integer
          format: int32
        myLike:
          type: boolean
        commentsCount:
          type: integer
          format: int32
        imagePath:
          type: string
    PhotoDto:
      type: object
      properties:
        imagePath:
          type: string
    PostSearchDto:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
            format: int64
        accountIds:
          type: array
          items:
            type: integer
            format: int64
        blockedIds:
          type: array
          items:
            type: integer
            format: int64
        author:
          type: string
        title:
          type: string
        postText:
          type: string
        withFriends:
          type: boolean
        isDelete:
          type: boolean
        tags:
          type: array
          items:
            type: string
        dateFrom:
          type: integer
          format: int64
        dateTo:
          type: integer
          format: int64
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    PagePostDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/PostDto'
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/Sort'
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
    Sort:
      type: object
      properties:
        empty:
          type: boolean
        unsorted:
          type: boolean
        sorted:
          type: boolean
    PageCommentDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/CommentDto'
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
